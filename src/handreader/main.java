/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package handreader;

import handreader.hand.CardButton;
import java.awt.CardLayout;
import java.io.File;
import java.io.RandomAccessFile;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import javax.swing.SwingUtilities;
import java.util.Arrays;
import java.util.List;

/**
 *
 * @author berendfuchs
 */
public class main extends javax.swing.JFrame {

    /**
     * Creates new form main
     */
    
    String filePath = "C:\\Users\\masin\\AppData\\Local\\PokerStars\\PokerStars.log.0";
    String searchPhrase = "CocosTableState:";
    
    public main() {
        initComponents();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cardframe = new javax.swing.JPanel();
        setFilePath = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        chooseFilePathComboBox = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        chooseFilePathTextField = new javax.swing.JTextField();
        goButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        cardDisplay = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        deckPanel1 = new handreader.deck.DeckPanel();
        handCardPanel1 = new handreader.hand.HandCardPanel();
        handCommunityCardPanel = new handreader.hand.HandCardPanel("Community Cards", 0, 5);
        rangeChartPanel1 = new handreader.RangeChartPanel();
        btn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        cardframe.setLayout(new java.awt.CardLayout());

        jLabel1.setText("Choose file location");

        chooseFilePathComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "C:\\\\Users\\\\masin\\\\AppData\\\\Local\\\\PokerStars\\\\PokerStars.log.0", "/Users/berendfuchs/Library/Logs/PokerStars.log.0" }));
        chooseFilePathComboBox.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                chooseFilePathComboBoxPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
        });

        jLabel2.setText("Or enter manually");

        goButton.setText("GO");
        goButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                goButtonActionPerformed(evt);
            }
        });

        jLabel3.setText("<html>example : C:\\\\Users\\\\User\\\\AppData\\\\Local\\\\PokerStars\\\\PokerStars.log.0</html>");

        jLabel4.setText("Choose search phrase");

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "\"CocosTableState:\"", "CocosTableState:", "UpdateMyCard", "Item 2", "Item 3", "Item 4" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout setFilePathLayout = new javax.swing.GroupLayout(setFilePath);
        setFilePath.setLayout(setFilePathLayout);
        setFilePathLayout.setHorizontalGroup(
            setFilePathLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, setFilePathLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(setFilePathLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(setFilePathLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel1)
                        .addComponent(jLabel2)
                        .addComponent(jLabel3)
                        .addComponent(chooseFilePathTextField)
                        .addComponent(chooseFilePathComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel4)
                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 481, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(goButton, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        setFilePathLayout.setVerticalGroup(
            setFilePathLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(setFilePathLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chooseFilePathComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chooseFilePathTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(goButton)
                .addContainerGap(773, Short.MAX_VALUE))
        );

        cardframe.add(setFilePath, "card1");

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(handCardPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(683, 683, 683)
                        .addComponent(btn)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(handCommunityCardPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(deckPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addComponent(rangeChartPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(deckPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addComponent(handCommunityCardPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(handCardPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rangeChartPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(66, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout cardDisplayLayout = new javax.swing.GroupLayout(cardDisplay);
        cardDisplay.setLayout(cardDisplayLayout);
        cardDisplayLayout.setHorizontalGroup(
            cardDisplayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cardDisplayLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        cardDisplayLayout.setVerticalGroup(
            cardDisplayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cardDisplayLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        cardframe.add(cardDisplay, "card2");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(cardframe, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(cardframe, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    
    
    
    private void chooseFilePathComboBoxPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_chooseFilePathComboBoxPopupMenuWillBecomeInvisible
        filePath = chooseFilePathComboBox.getSelectedItem().toString();
        chooseFilePathTextField.setText(filePath);
    }//GEN-LAST:event_chooseFilePathComboBoxPopupMenuWillBecomeInvisible

    private void goButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_goButtonActionPerformed
        CardLayout c = (CardLayout)(cardframe.getLayout());
        c.show(cardframe, "card2");
        filePath = chooseFilePathTextField.getText();
        btn.doClick();
        btn.hide();
        
        /*btn.setText("clicked");
        ExecutorService executor = Executors.newFixedThreadPool(4);
        
        LogFileReader tailF = new LogFileReader(filePath, 2000, searchPhrase);
        
        executor.execute(tailF)*/;
    }//GEN-LAST:event_goButtonActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActionPerformed

        System.out.println("Button performed.......");
        // We're going to do something that takes a long time, so we
        // spin off a thread and update the display when we're done.
        Thread worker = new Thread() {
            private boolean debug = false;
        private int runEveryNSeconds = 1000;
        private long lastKnownPosition = 0;
        private boolean shouldIRun = true;
        private String searchedText = "CocosTableState:";
        private File file = new File(filePath); //new File("/home/soufiane/workspace/logfile");
        private void printLine(String message) {
            System.out.println(message);
        }

        private void printLineIfContains(String message) {
            //btn.setText("AAAgAAA");
            if (message.contains(searchedText)) {
                String handCommunity = message.substring(message.indexOf("["), message.indexOf("]"));
                List<String> handCommunityCards = Arrays.asList(handCommunity.split(" ")).subList(1, 6);
                List<CardButton> cards = handCommunityCardPanel.getCardButtons();
                int p = 0;
                for (String card : handCommunityCards) {
                    cards.get(p).setCard(card.replace("np", "")); p++;
                }
              
                // Hand binding - always two cards in hand
                List<CardButton> handCards = handCardPanel1.getCardButtons();
                int i = 0;
                List<String> hand = Arrays.asList(message.substring(message.indexOf("players: ")).split(" "));
                for (String card : hand) {
                    if (card.contains("dnp") || card.contains("cnp") || card.contains("snp") || card.contains("hnp")) {
                        handCards.get(i).setCard(card.replace("np", "")); i++;
                    }
                }            
            
                //System.out.println(message);
            }
        }
        public void stopRunning() {
            shouldIRun = false;
        }
        public void run() {
            try {
            while (shouldIRun) {
                Thread.sleep(runEveryNSeconds);
                long fileLength = file.length();
                if (fileLength > lastKnownPosition) {

                    // Reading and writing file
                    RandomAccessFile readWriteFileAccess = new RandomAccessFile(file, "rw");
                    readWriteFileAccess.seek(lastKnownPosition);
                    String line = null;
                    while ((line = readWriteFileAccess.readLine()) != null) {
                        this.printLineIfContains(line);
                    }
                    lastKnownPosition = readWriteFileAccess.getFilePointer();
                    readWriteFileAccess.close();
                } else {
                    if (debug)
                        this.printLine("Hmm.. Couldn't found new line after line # ");
                }
            }
            } catch (Exception e) {
                stopRunning();
            }
            
            SwingUtilities.invokeLater(new Runnable() {
              public void run() {
                setEnabled(true);
              }
            });
          }
        };

        worker.start(); // So we don't hold up the dispatch thread.
    }//GEN-LAST:event_btnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn;
    private javax.swing.JPanel cardDisplay;
    private javax.swing.JPanel cardframe;
    private javax.swing.JComboBox<String> chooseFilePathComboBox;
    private javax.swing.JTextField chooseFilePathTextField;
    private handreader.deck.DeckPanel deckPanel1;
    private javax.swing.JButton goButton;
    private handreader.hand.HandCardPanel handCardPanel1;
    private handreader.hand.HandCardPanel handCommunityCardPanel;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private handreader.RangeChartPanel rangeChartPanel1;
    private javax.swing.JPanel setFilePath;
    // End of variables declaration//GEN-END:variables
}

//  cd /Users/berendfuchs/Library/Logs/PokerStars
//  java -jar extractor-1.0.jar PokerStars.log.0 "CocosTableState:"